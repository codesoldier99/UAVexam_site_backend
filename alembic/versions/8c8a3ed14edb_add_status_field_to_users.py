"""add_status_field_to_users

Revision ID: 8c8a3ed14edb
Revises: aa291679f89c
Create Date: 2025-08-02 08:05:35.524389

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '8c8a3ed14edb'
down_revision: Union[str, Sequence[str], None] = 'aa291679f89c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='权限名称'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_permissions_id'), 'permissions', ['id'], unique=False)
    op.create_table('role_permissions',
    sa.Column('role_id', sa.Integer(), nullable=False, comment='角色ID'),
    sa.Column('permission_id', sa.Integer(), nullable=False, comment='权限ID'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.add_column('candidates', sa.Column('id_card', sa.String(length=18), nullable=False, comment='身份证号'))
    op.add_column('candidates', sa.Column('exam_product_id', sa.Integer(), nullable=False, comment='考试产品ID'))
    op.alter_column('candidates', 'name',
               existing_type=mysql.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_comment='考生姓名',
               existing_nullable=False)
    op.alter_column('candidates', 'status',
               existing_type=mysql.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_comment='考生状态',
               existing_nullable=True,
               existing_server_default=sa.text("'待审核'"))
    op.drop_index(op.f('id_number'), table_name='candidates')
    op.create_unique_constraint(None, 'candidates', ['id_card'])
    op.drop_constraint(op.f('candidates_ibfk_3'), 'candidates', type_='foreignkey')
    op.drop_constraint(op.f('candidates_ibfk_1'), 'candidates', type_='foreignkey')
    op.create_foreign_key(None, 'candidates', 'exam_products', ['exam_product_id'], ['id'])
    op.drop_column('candidates', 'gender')
    op.drop_column('candidates', 'emergency_contact')
    op.drop_column('candidates', 'id_number')
    op.drop_column('candidates', 'notes')
    op.drop_column('candidates', 'phone')
    op.drop_column('candidates', 'birth_date')
    op.drop_column('candidates', 'target_exam_product_id')
    op.drop_column('candidates', 'address')
    op.drop_column('candidates', 'emergency_phone')
    op.drop_column('candidates', 'created_by')
    op.drop_column('candidates', 'email')
    op.add_column('exam_products', sa.Column('status', sa.Enum('active', 'inactive', name='exam_product_status'), nullable=True, comment='状态'))
    op.alter_column('exam_products', 'description',
               existing_type=mysql.TEXT(),
               type_=sa.String(length=255),
               existing_comment='产品描述',
               existing_nullable=True)
    op.drop_index(op.f('code'), table_name='exam_products')
    op.drop_column('exam_products', 'code')
    op.drop_column('exam_products', 'training_price')
    op.drop_column('exam_products', 'practical_content')
    op.drop_column('exam_products', 'theory_content')
    op.drop_column('exam_products', 'price')
    op.drop_column('exam_products', 'practical_pass_score')
    op.drop_column('exam_products', 'theory_pass_score')
    op.drop_column('exam_products', 'duration_minutes')
    op.drop_column('exam_products', 'training_hours')
    op.drop_column('exam_products', 'is_active')
    op.drop_column('exam_products', 'exam_level')
    op.drop_column('exam_products', 'requirements')
    op.drop_column('exam_products', 'exam_type')
    op.drop_column('exam_products', 'category')
    op.drop_column('exam_products', 'exam_class')
    op.drop_column('roles', 'permissions')
    op.drop_column('roles', 'description')
    op.drop_column('roles', 'is_active')
    op.add_column('schedules', sa.Column('exam_date', sa.Date(), nullable=False, comment='考试日期'))
    op.add_column('schedules', sa.Column('activity_name', sa.String(length=100), nullable=False, comment='活动名称'))
    op.alter_column('schedules', 'start_time',
               existing_type=mysql.DATETIME(),
               type_=sa.Time(),
               existing_comment='开始时间',
               existing_nullable=False)
    op.alter_column('schedules', 'end_time',
               existing_type=mysql.DATETIME(),
               type_=sa.Time(),
               existing_comment='结束时间',
               existing_nullable=False)
    op.alter_column('schedules', 'venue_id',
               existing_type=mysql.INTEGER(),
               nullable=False,
               existing_comment='考场ID')
    op.alter_column('schedules', 'status',
               existing_type=mysql.VARCHAR(length=20),
               type_=sa.String(length=50),
               comment='日程状态',
               existing_comment='排期状态',
               existing_nullable=True)
    op.alter_column('schedules', 'check_in_time',
               existing_type=mysql.DATETIME(),
               comment='扫码签到时间',
               existing_comment='签到时间',
               existing_nullable=True)
    op.drop_constraint(op.f('schedules_ibfk_2'), 'schedules', type_='foreignkey')
    op.drop_constraint(op.f('schedules_ibfk_3'), 'schedules', type_='foreignkey')
    op.drop_column('schedules', 'schedule_type')
    op.drop_column('schedules', 'scheduled_date')
    op.drop_column('schedules', 'notes')
    op.drop_column('schedules', 'check_in_status')
    op.drop_column('schedules', 'queue_position')
    op.drop_column('schedules', 'created_by')
    op.drop_column('schedules', 'estimated_wait_time')
    op.drop_column('schedules', 'exam_product_id')
    op.add_column('users', sa.Column('status', sa.Enum('active', 'inactive', name='user_status'), nullable=True))
    op.add_column('users', sa.Column('last_login', sa.DateTime(), nullable=True))
    op.alter_column('users', 'username',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('users', 'role_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.alter_column('users', 'email',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=320),
               existing_nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=False)
    op.alter_column('users', 'is_superuser',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=False)
    op.alter_column('users', 'is_verified',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=False)
    op.add_column('venues', sa.Column('type', sa.String(length=50), nullable=False, comment='考场类型（理论、实操、候考）'))
    op.add_column('venues', sa.Column('status', sa.Enum('active', 'inactive', name='venue_status'), nullable=True, comment='状态'))
    op.drop_column('venues', 'is_active')
    op.drop_column('venues', 'description')
    op.drop_column('venues', 'capacity')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('venues', sa.Column('capacity', mysql.INTEGER(), autoincrement=False, nullable=False, comment='容纳人数'))
    op.add_column('venues', sa.Column('description', mysql.TEXT(), nullable=True, comment='考场描述'))
    op.add_column('venues', sa.Column('is_active', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True, comment='是否启用'))
    op.drop_column('venues', 'status')
    op.drop_column('venues', 'type')
    op.alter_column('users', 'is_verified',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=True)
    op.alter_column('users', 'is_superuser',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=True)
    op.alter_column('users', 'is_active',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.String(length=320),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)
    op.alter_column('users', 'role_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.alter_column('users', 'username',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)
    op.drop_column('users', 'last_login')
    op.drop_column('users', 'status')
    op.add_column('schedules', sa.Column('exam_product_id', mysql.INTEGER(), autoincrement=False, nullable=False, comment='考试产品ID'))
    op.add_column('schedules', sa.Column('estimated_wait_time', mysql.INTEGER(), autoincrement=False, nullable=True, comment='预估等待时间（分钟）'))
    op.add_column('schedules', sa.Column('created_by', mysql.INTEGER(), autoincrement=False, nullable=False, comment='创建人ID'))
    op.add_column('schedules', sa.Column('queue_position', mysql.INTEGER(), autoincrement=False, nullable=True, comment='排队位置'))
    op.add_column('schedules', sa.Column('check_in_status', mysql.VARCHAR(length=20), nullable=True, comment='签到状态'))
    op.add_column('schedules', sa.Column('notes', mysql.TEXT(), nullable=True, comment='备注信息'))
    op.add_column('schedules', sa.Column('scheduled_date', mysql.DATETIME(), nullable=False, comment='排期日期'))
    op.add_column('schedules', sa.Column('schedule_type', mysql.VARCHAR(length=20), nullable=False, comment='排期类型'))
    op.create_foreign_key(op.f('schedules_ibfk_3'), 'schedules', 'exam_products', ['exam_product_id'], ['id'])
    op.create_foreign_key(op.f('schedules_ibfk_2'), 'schedules', 'users', ['created_by'], ['id'])
    op.alter_column('schedules', 'check_in_time',
               existing_type=mysql.DATETIME(),
               comment='签到时间',
               existing_comment='扫码签到时间',
               existing_nullable=True)
    op.alter_column('schedules', 'status',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=20),
               comment='排期状态',
               existing_comment='日程状态',
               existing_nullable=True)
    op.alter_column('schedules', 'venue_id',
               existing_type=mysql.INTEGER(),
               nullable=True,
               existing_comment='考场ID')
    op.alter_column('schedules', 'end_time',
               existing_type=sa.Time(),
               type_=mysql.DATETIME(),
               existing_comment='结束时间',
               existing_nullable=False)
    op.alter_column('schedules', 'start_time',
               existing_type=sa.Time(),
               type_=mysql.DATETIME(),
               existing_comment='开始时间',
               existing_nullable=False)
    op.drop_column('schedules', 'activity_name')
    op.drop_column('schedules', 'exam_date')
    op.add_column('roles', sa.Column('is_active', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True, comment='是否激活'))
    op.add_column('roles', sa.Column('description', mysql.TEXT(), nullable=True, comment='角色描述'))
    op.add_column('roles', sa.Column('permissions', mysql.TEXT(), nullable=True, comment='权限列表，JSON格式'))
    op.add_column('exam_products', sa.Column('exam_class', mysql.ENUM('AGRICULTURE', 'POWER_INSPECTION', 'FILM_PHOTOGRAPHY', 'LOGISTICS'), nullable=False, comment='考试类别'))
    op.add_column('exam_products', sa.Column('category', mysql.ENUM('VLOS', 'BVLOS'), nullable=False, comment='考试种类'))
    op.add_column('exam_products', sa.Column('exam_type', mysql.ENUM('MULTIROTOR', 'FIXED_WING', 'VTOL'), nullable=False, comment='考试类型'))
    op.add_column('exam_products', sa.Column('requirements', mysql.TEXT(), nullable=True, comment='报考要求'))
    op.add_column('exam_products', sa.Column('exam_level', mysql.ENUM('PILOT', 'CAPTAIN', 'INSTRUCTOR'), nullable=False, comment='考试等级'))
    op.add_column('exam_products', sa.Column('is_active', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True, comment='是否启用'))
    op.add_column('exam_products', sa.Column('training_hours', mysql.INTEGER(), autoincrement=False, nullable=False, comment='培训时长（小时）'))
    op.add_column('exam_products', sa.Column('duration_minutes', mysql.INTEGER(), autoincrement=False, nullable=False, comment='考试时长（分钟）'))
    op.add_column('exam_products', sa.Column('theory_pass_score', mysql.INTEGER(), autoincrement=False, nullable=False, comment='理论考试及格分数'))
    op.add_column('exam_products', sa.Column('practical_pass_score', mysql.INTEGER(), autoincrement=False, nullable=False, comment='实操考试及格分数'))
    op.add_column('exam_products', sa.Column('price', mysql.FLOAT(), nullable=False, comment='考试费用'))
    op.add_column('exam_products', sa.Column('theory_content', mysql.TEXT(), nullable=True, comment='理论考试内容'))
    op.add_column('exam_products', sa.Column('practical_content', mysql.TEXT(), nullable=True, comment='实操考试内容'))
    op.add_column('exam_products', sa.Column('training_price', mysql.FLOAT(), nullable=True, comment='培训费用'))
    op.add_column('exam_products', sa.Column('code', mysql.VARCHAR(length=50), nullable=False, comment='产品代码'))
    op.create_index(op.f('code'), 'exam_products', ['code'], unique=True)
    op.alter_column('exam_products', 'description',
               existing_type=sa.String(length=255),
               type_=mysql.TEXT(),
               existing_comment='产品描述',
               existing_nullable=True)
    op.drop_column('exam_products', 'status')
    op.add_column('candidates', sa.Column('email', mysql.VARCHAR(length=100), nullable=True, comment='邮箱'))
    op.add_column('candidates', sa.Column('created_by', mysql.INTEGER(), autoincrement=False, nullable=False, comment='创建人ID'))
    op.add_column('candidates', sa.Column('emergency_phone', mysql.VARCHAR(length=20), nullable=True, comment='紧急联系电话'))
    op.add_column('candidates', sa.Column('address', mysql.TEXT(), nullable=True, comment='联系地址'))
    op.add_column('candidates', sa.Column('target_exam_product_id', mysql.INTEGER(), autoincrement=False, nullable=True, comment='目标考试产品ID'))
    op.add_column('candidates', sa.Column('birth_date', mysql.DATETIME(), nullable=True, comment='出生日期'))
    op.add_column('candidates', sa.Column('phone', mysql.VARCHAR(length=20), nullable=False, comment='手机号'))
    op.add_column('candidates', sa.Column('notes', mysql.TEXT(), nullable=True, comment='备注信息'))
    op.add_column('candidates', sa.Column('id_number', mysql.VARCHAR(length=18), nullable=False, comment='身份证号'))
    op.add_column('candidates', sa.Column('emergency_contact', mysql.VARCHAR(length=100), nullable=True, comment='紧急联系人'))
    op.add_column('candidates', sa.Column('gender', mysql.VARCHAR(length=10), nullable=True, comment='性别'))
    op.drop_constraint(None, 'candidates', type_='foreignkey')
    op.create_foreign_key(op.f('candidates_ibfk_1'), 'candidates', 'users', ['created_by'], ['id'])
    op.create_foreign_key(op.f('candidates_ibfk_3'), 'candidates', 'exam_products', ['target_exam_product_id'], ['id'])
    op.drop_constraint(None, 'candidates', type_='unique')
    op.create_index(op.f('id_number'), 'candidates', ['id_number'], unique=True)
    op.alter_column('candidates', 'status',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=20),
               existing_comment='考生状态',
               existing_nullable=True,
               existing_server_default=sa.text("'待审核'"))
    op.alter_column('candidates', 'name',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=100),
               existing_comment='考生姓名',
               existing_nullable=False)
    op.drop_column('candidates', 'exam_product_id')
    op.drop_column('candidates', 'id_card')
    op.drop_table('role_permissions')
    op.drop_index(op.f('ix_permissions_id'), table_name='permissions')
    op.drop_table('permissions')
    # ### end Alembic commands ###
