"""update exam products with CAAC classification system

Revision ID: 0383f944f1d1
Revises: d6fe0fee1cc3
Create Date: 2025-08-01 10:33:43.847806

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0383f944f1d1'
down_revision: Union[str, Sequence[str], None] = 'd6fe0fee1cc3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('exam_products', sa.Column('code', sa.String(length=50), nullable=False, comment='产品代码'))
    op.add_column('exam_products', sa.Column('category', sa.Enum('VLOS', 'BVLOS', name='examcategory'), nullable=False, comment='考试种类'))
    op.add_column('exam_products', sa.Column('exam_type', sa.Enum('MULTIROTOR', 'FIXED_WING', 'VTOL', name='examtype'), nullable=False, comment='考试类型'))
    op.add_column('exam_products', sa.Column('exam_class', sa.Enum('AGRICULTURE', 'POWER_INSPECTION', 'FILM_PHOTOGRAPHY', 'LOGISTICS', name='examclass'), nullable=False, comment='考试类别'))
    op.add_column('exam_products', sa.Column('exam_level', sa.Enum('PILOT', 'CAPTAIN', 'INSTRUCTOR', name='examlevel'), nullable=False, comment='考试等级'))
    op.add_column('exam_products', sa.Column('theory_pass_score', sa.Integer(), nullable=False, comment='理论考试及格分数'))
    op.add_column('exam_products', sa.Column('practical_pass_score', sa.Integer(), nullable=False, comment='实操考试及格分数'))
    op.add_column('exam_products', sa.Column('training_hours', sa.Integer(), nullable=False, comment='培训时长（小时）'))
    op.add_column('exam_products', sa.Column('price', sa.Float(), nullable=False, comment='考试费用'))
    op.add_column('exam_products', sa.Column('training_price', sa.Float(), nullable=True, comment='培训费用'))
    op.add_column('exam_products', sa.Column('theory_content', sa.Text(), nullable=True, comment='理论考试内容'))
    op.add_column('exam_products', sa.Column('practical_content', sa.Text(), nullable=True, comment='实操考试内容'))
    op.add_column('exam_products', sa.Column('requirements', sa.Text(), nullable=True, comment='报考要求'))
    op.create_unique_constraint(None, 'exam_products', ['code'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'exam_products', type_='unique')
    op.drop_column('exam_products', 'requirements')
    op.drop_column('exam_products', 'practical_content')
    op.drop_column('exam_products', 'theory_content')
    op.drop_column('exam_products', 'training_price')
    op.drop_column('exam_products', 'price')
    op.drop_column('exam_products', 'training_hours')
    op.drop_column('exam_products', 'practical_pass_score')
    op.drop_column('exam_products', 'theory_pass_score')
    op.drop_column('exam_products', 'exam_level')
    op.drop_column('exam_products', 'exam_class')
    op.drop_column('exam_products', 'exam_type')
    op.drop_column('exam_products', 'category')
    op.drop_column('exam_products', 'code')
    # ### end Alembic commands ###
