"""add candidates and schedules tables

Revision ID: 1810e68748f3
Revises: 0383f944f1d1
Create Date: 2025-08-01 10:55:25.010542

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1810e68748f3'
down_revision: Union[str, Sequence[str], None] = '0383f944f1d1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('candidates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='考生姓名'),
    sa.Column('id_number', sa.String(length=18), nullable=False, comment='身份证号'),
    sa.Column('phone', sa.String(length=20), nullable=False, comment='手机号'),
    sa.Column('email', sa.String(length=100), nullable=True, comment='邮箱'),
    sa.Column('gender', sa.String(length=10), nullable=True, comment='性别'),
    sa.Column('birth_date', sa.DateTime(), nullable=True, comment='出生日期'),
    sa.Column('address', sa.Text(), nullable=True, comment='联系地址'),
    sa.Column('emergency_contact', sa.String(length=100), nullable=True, comment='紧急联系人'),
    sa.Column('emergency_phone', sa.String(length=20), nullable=True, comment='紧急联系电话'),
    sa.Column('target_exam_product_id', sa.Integer(), nullable=True, comment='目标考试产品ID'),
    sa.Column('institution_id', sa.Integer(), nullable=False, comment='所属机构ID'),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', 'ACTIVE', 'INACTIVE', name='candidatestatus'), nullable=True, comment='考生状态'),
    sa.Column('notes', sa.Text(), nullable=True, comment='备注信息'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.Column('created_by', sa.Integer(), nullable=False, comment='创建人ID'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.ForeignKeyConstraint(['target_exam_product_id'], ['exam_products.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id_number')
    )
    op.create_index(op.f('ix_candidates_id'), 'candidates', ['id'], unique=False)
    op.create_table('schedules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=False, comment='考生ID'),
    sa.Column('exam_product_id', sa.Integer(), nullable=False, comment='考试产品ID'),
    sa.Column('schedule_type', sa.Enum('THEORY', 'PRACTICAL', name='scheduletype'), nullable=False, comment='排期类型'),
    sa.Column('scheduled_date', sa.DateTime(), nullable=False, comment='排期日期'),
    sa.Column('start_time', sa.DateTime(), nullable=False, comment='开始时间'),
    sa.Column('end_time', sa.DateTime(), nullable=False, comment='结束时间'),
    sa.Column('venue_id', sa.Integer(), nullable=True, comment='考场ID'),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', name='schedulestatus'), nullable=True, comment='排期状态'),
    sa.Column('check_in_status', sa.Enum('NOT_CHECKED_IN', 'CHECKED_IN', 'LATE', name='checkinstatus'), nullable=True, comment='签到状态'),
    sa.Column('check_in_time', sa.DateTime(), nullable=True, comment='签到时间'),
    sa.Column('queue_position', sa.Integer(), nullable=True, comment='排队位置'),
    sa.Column('estimated_wait_time', sa.Integer(), nullable=True, comment='预估等待时间（分钟）'),
    sa.Column('notes', sa.Text(), nullable=True, comment='备注信息'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.Column('created_by', sa.Integer(), nullable=False, comment='创建人ID'),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['exam_product_id'], ['exam_products.id'], ),
    sa.ForeignKeyConstraint(['venue_id'], ['venues.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_schedules_id'), 'schedules', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_schedules_id'), table_name='schedules')
    op.drop_table('schedules')
    op.drop_index(op.f('ix_candidates_id'), table_name='candidates')
    op.drop_table('candidates')
    # ### end Alembic commands ###
